<?php

namespace User\ProfesionalBundle\Entity;

use ADesigns\CalendarBundle\Entity\EventEntity;
use Doctrine\ORM\Mapping as ORM;

/**
 * ProfesionalEvent
 *
 * @ORM\Table()
 * @ORM\Entity
 */
class ProfesionalEvent
{
    /**
     * @var integer
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;

    /**
     * @var string
     *
     * @ORM\Column(name="title", type="string", length=255)
     */
    private $title;

    /**
     * @var string
     *
     * @ORM\Column(name="url", type="string", length=255)
     */
    private $url;


    /**
     * @var \DateTime
     *
     * @ORM\Column(name="start_date", type="datetime")
     */
    private $start_date;


    /**
     * @var string
     *
     * @ORM\Column(name="duration", type="string")
     */
    private $duration;

    /**
     * @var boolean
     *
     * @ORM\Column(name="notify", type="boolean")
     */
    private $notify;


    /**
     * @var \DateTime
     *
     * @ORM\Column(name="notify_at", type="datetime")
     */
    private $notify_at;



    /**
     * @var \DateTime
     *
     * @ORM\Column(name="notified_at", type="datetime", nullable=true)
     */
    private $notified_at;


    /**
     * @var string
     *
     * @ORM\Column(name="client_access_token", type="string", length=255)
     */
    private $client_access_token;

    /**
     * @var \DateTime
     *
     * //si es un usuario invitado, guardamos aqui su informaciÃ³n
     *
     * @ORM\Column(name="guess", type="datetime", nullable=true)
     */
    private $guess;

    //RELATIONS


    /**
     * @ORM\ManyToOne(targetEntity="Professional", inversedBy="events")
     * @ORM\JoinColumn(name="professional_id", referencedColumnName="id")
     */
    private $professional;


    /**
     * @ORM\ManyToOne(targetEntity="\User\ClientBundle\Entity\Client", inversedBy="events")
     * @ORM\JoinColumn(name="client_id", referencedColumnName="id")
     */
    private $client;


    public function __construct(){

        $this->client_access_token = md5(uniqid());
    }
    
}